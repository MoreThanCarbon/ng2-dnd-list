{
  "version": 3,
  "file": "fjsc-ng-dnd-list.umd.min.js",
  "sources": [
    "ng://@fjsc/ng-dnd-list/node_modules/tslib/tslib.es6.js",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/services/dnd-draggable.service.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/dnd-constants.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-draggable.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-list.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-nodrag.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-handle.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/dnd-list.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class DndDraggableService {\r\n\r\n  private _isDragging = false;\r\n  private _itemType = '';\r\n  private _dropCallback: Function;\r\n  private _dropEffect: string;\r\n  private _effectAllowed: string;\r\n  private _removeOnDrop = false;\r\n\r\n  public dropEndSource = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  setDraggingState(state: boolean) {\r\n    this._isDragging = state;\r\n  }\r\n\r\n  getDraggingState(): boolean {\r\n    return this._isDragging;\r\n  }\r\n\r\n  setItemType(value: string): void {\r\n    this._itemType = value.toLowerCase();\r\n  }\r\n\r\n  getItemType(): string {\r\n    return this._itemType;\r\n  }\r\n\r\n  setDropCallback(value: Function): void {\r\n    this._dropCallback = value;\r\n  }\r\n\r\n  getDropCallback(): Function {\r\n    return this._dropCallback;\r\n  }\r\n\r\n  setDropEffect(dropEffect: string): void {\r\n    this._dropEffect = dropEffect;\r\n  }\r\n\r\n  getDropEffect(): string {\r\n    return this._dropEffect;\r\n  }\r\n\r\n  setEffectAllowed(effectAllowed: string): void {\r\n    this._effectAllowed = effectAllowed;\r\n  }\r\n\r\n  getEffectAllowed(): string {\r\n    return this._effectAllowed;\r\n  }\r\n\r\n  setRemoveOnDrop(value: boolean) {\r\n    this._removeOnDrop = value;\r\n  }\r\n\r\n  getRemoveOnDrop() {\r\n    return this._removeOnDrop;\r\n  }\r\n\r\n}\r\n",
    "export const MIME_TYPE = 'application/x-dnd';\r\nexport const EDGE_MIME_TYPE = 'application/json';\r\nexport const MSIE_MIME_TYPE = 'Text';\r\nexport const ALL_EFFECTS = ['move', 'copy', 'link'];\r\n",
    "import {\r\n  Directive, HostBinding, OnChanges, SimpleChanges, Input,\r\n  HostListener, ElementRef, Renderer2, Output, EventEmitter\r\n} from '@angular/core';\r\nimport { DndDraggableService } from '../services/dnd-draggable.service';\r\nimport { MIME_TYPE, EDGE_MIME_TYPE, MSIE_MIME_TYPE, ALL_EFFECTS } from '../dnd-constants';\r\nimport { DndDragendEvent } from '../models/events';\r\n\r\n@Directive({\r\n  selector: '[dndDraggable]',\r\n})\r\nexport class DndDraggableDirective {\r\n\r\n  @Input() dndDraggable: any;\r\n  @Input() dndDisable: boolean;\r\n  @Input() dndType = '';\r\n  @Input() dndCallback: Function;\r\n  @Input() dndEffectAllowed: string;\r\n\r\n  @Output() dndDragstart = new EventEmitter<DragEvent>();\r\n  @Output() dndDragend = new EventEmitter<DndDragendEvent>();\r\n  @Output() dndSelected = new EventEmitter<Event>();\r\n\r\n  @Output() dndMoved = new EventEmitter<DragEvent>();\r\n  @Output() dndCopied = new EventEmitter<DragEvent>();\r\n  @Output() dndLinked = new EventEmitter<DragEvent>();\r\n  @Output() dndCanceled = new EventEmitter<DragEvent>();\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return !this.dndDisable;\r\n  }\r\n\r\n  private _nativeElement: Element;\r\n\r\n  constructor(private _dndService: DndDraggableService, private _renderer: Renderer2, _hostElement: ElementRef) {\r\n    this._nativeElement = _hostElement.nativeElement;\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    if (!this.draggable) {\r\n      return true;\r\n    }\r\n    this._dndService.setDraggingState(true);\r\n    this._dndService.setItemType(this.dndType);\r\n    const mimeType = MIME_TYPE + (this._dndService.getItemType() ? ('-' + this._dndService.getItemType()) : '');\r\n    // Set the allowed drop effects. See below for special IE handling.\r\n    this._dndService.setDropEffect('none');\r\n    this._dndService.setEffectAllowed(this.dndEffectAllowed || ALL_EFFECTS[0]);\r\n\r\n    event.dataTransfer.effectAllowed = this._dndService.getEffectAllowed(); // TODO: set allowed effects\r\n    try {\r\n      event.dataTransfer.setData(mimeType, JSON.stringify(this.dndDraggable));\r\n    } catch (e) {\r\n      const data = {\r\n        item: this.dndDraggable,\r\n        type: this._dndService.getItemType()\r\n      };\r\n\r\n      try {\r\n        // Setting a custom MIME type did not work, we are probably in IE or Edge.\r\n        event.dataTransfer.setData(EDGE_MIME_TYPE, JSON.stringify(data));\r\n\r\n      } catch (e) {\r\n        // We are in Internet Explorer and can only use the Text MIME type. Also note that IE\r\n        // does not allow changing the cursor in the dragover event, therefore we have to choose\r\n        // the one we want to display now by setting effectAllowed.\r\n        event.dataTransfer.effectAllowed = 'move';\r\n        event.dataTransfer.setData(MSIE_MIME_TYPE, JSON.stringify(data));\r\n      }\r\n    }\r\n    this._renderer.addClass(this._nativeElement, 'dndDragging');\r\n    setTimeout(() => this._renderer.addClass(this._nativeElement, 'dndDraggingSource'), 0);\r\n    // Try setting a proper drag image if triggered on a dnd-handle (won't work in IE).\r\n    if (event._dndHandle && event.dataTransfer.setDragImage) {\r\n      event.dataTransfer.setDragImage(this._nativeElement, 0, 0);\r\n    }\r\n    // Emit dragstart event and prepare extra callback for dropzone.\r\n    this.dndDragstart.emit(event);\r\n\r\n    if (this.dndCallback) {\r\n      const callback = this.dndCallback;\r\n      this._dndService.setDropCallback(function (params) {\r\n        return callback(params);\r\n      });\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  onDragEnd(event: DragEvent) {\r\n    const dropEffect = this._dndService.getDropEffect();\r\n    const cb = { copy: 'dndCopied', link: 'dndLinked', move: 'dndMoved', none: 'dndCanceled' };\r\n    this[cb[dropEffect]].emit(event);\r\n    this.dndDragend.emit({\r\n      event: event,\r\n      dropEffect: dropEffect\r\n    });\r\n\r\n    // Clean up\r\n    this._dndService.setDraggingState(false);\r\n    this._dndService.setDropCallback(undefined);\r\n    this._dndService.setRemoveOnDrop(false);\r\n    this._renderer.removeClass(this._nativeElement, 'dndDragging');\r\n    this._renderer.removeClass(this._nativeElement, 'dndDraggingSource');\r\n    event.stopPropagation();\r\n\r\n    // In IE9 it is possible that the timeout from dragstart triggers after the dragend handler.\r\n    setTimeout(() => this._renderer.removeClass(this._nativeElement, 'dndDraggingSource'), 0);\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  click(event: MouseEvent) {\r\n    this.dndSelected.emit(event);\r\n    // Prevent triggering dndSelected in parent elements.\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n",
    "import {\r\n   Directive,\r\n   HostBinding,\r\n   OnChanges,\r\n   Input,\r\n   HostListener,\r\n   ElementRef,\r\n   Renderer2,\r\n   OnInit,\r\n   Output,\r\n   EventEmitter\r\n} from '@angular/core';\r\nimport { DndDraggableService } from '../services/dnd-draggable.service';\r\nimport { MSIE_MIME_TYPE, EDGE_MIME_TYPE, MIME_TYPE, ALL_EFFECTS } from '../dnd-constants';\r\nimport { DndListEvent } from '../models/events';\r\n\r\n@Directive({\r\n   selector: '[dndList]',\r\n})\r\nexport class DndListDirective implements OnInit {\r\n   @Input() dndDisable = false;\r\n   @Input() dndAllowedTypes: String[];\r\n   @Input() dndExternalSources: any;\r\n   @Input() dndHorizontalList: any;\r\n   @Input() dndEffectAllowed: string;\r\n   @Input() pureComponent: boolean;\r\n   @Input() dndList: any;\r\n\r\n   @Output() dndListChange = new EventEmitter<any>();\r\n\r\n   @Output() dndDragover = new EventEmitter<DndListEvent>();\r\n   @Output() dndDrop = new EventEmitter<DndListEvent>();\r\n   @Output() dndInserted = new EventEmitter<DndListEvent>();\r\n\r\n   private _nativeElement: Element;\r\n   private _placeholderNode: Element;\r\n\r\n   private _listSettings: any = {};\r\n   private _listNode: any;\r\n   private _dragOverStopped = false;\r\n\r\n   private _counter = 0;\r\n\r\n   constructor(private _el: ElementRef, private _renderer: Renderer2, private _dndService: DndDraggableService) {\r\n      this._nativeElement = this._el.nativeElement;\r\n   }\r\n\r\n   ngOnInit(): void {\r\n      const placeholder = this._getPlaceholderElement();\r\n      placeholder.remove();\r\n      this._placeholderNode = placeholder;\r\n      this._listNode = this._nativeElement;\r\n   }\r\n\r\n   @HostListener('dragenter', ['$event'])\r\n   onDragEnter(event) {\r\n      this._counter++;\r\n      this._dragOverStopped = false;\r\n      event = event.originalEvent || event;\r\n      this._listSettings = {\r\n         allowedTypes: Array.isArray(this.dndAllowedTypes) && this.dndAllowedTypes.join('|').toLowerCase().split('|'),\r\n         disabled: this.dndDisable,\r\n         externalSources: this.dndExternalSources,\r\n         horizontal: this.dndHorizontalList\r\n      };\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      if (!mimeType || !this._isDropAllowed(this._getItemType(mimeType))) {\r\n         return true;\r\n      }\r\n      event.preventDefault();\r\n   }\r\n\r\n   @HostListener('dragover', ['$event'])\r\n   onDragOver(event) {\r\n      event = event.originalEvent || event;\r\n      // Check whether the drop is allowed and determine mime type.\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      const itemType = this._getItemType(mimeType);\r\n      if (!mimeType || !this._isDropAllowed(itemType)) {\r\n         return true;\r\n      }\r\n      // Make sure the placeholder is shown, which is especially important if the list is empty.\r\n      if (this._placeholderNode.parentNode !== this._listNode) {\r\n         this._renderer.appendChild(this._nativeElement, this._placeholderNode);\r\n      }\r\n\r\n      if (event.target !== this._listNode) {\r\n         // Try to find the node direct directly below the list node.\r\n         let listItemNode = event.target;\r\n         while (listItemNode.parentNode !== this._listNode && listItemNode.parentNode) {\r\n            listItemNode = listItemNode.parentNode;\r\n         }\r\n\r\n         if (listItemNode.parentNode === this._listNode && listItemNode !== this._placeholderNode) {\r\n            // If the mouse pointer is in the upper half of the list item element,\r\n            // we position the placeholder before the list item, otherwise after it.\r\n            const rect = listItemNode.getBoundingClientRect();\r\n            let isFirstHalf;\r\n            if (this._listSettings.horizontal) {\r\n               isFirstHalf = event.clientX < rect.left + rect.width / 2;\r\n            } else {\r\n               isFirstHalf = event.clientY < rect.top + rect.height / 2;\r\n            }\r\n            this._listNode.insertBefore(this._placeholderNode,\r\n               isFirstHalf ? listItemNode : listItemNode.nextSibling);\r\n         }\r\n      }\r\n\r\n      // In IE we set a fake effectAllowed in dragstart to get the correct cursor, we therefore\r\n      // ignore the effectAllowed passed in dataTransfer. We must also not access dataTransfer for\r\n      // drops from external sources, as that throws an exception.\r\n      const ignoreDataTransfer = mimeType === MSIE_MIME_TYPE;\r\n      const dropEffect = this._getDropEffect(event, ignoreDataTransfer);\r\n\r\n      if (dropEffect === 'none') {\r\n         return this._stopDragover();\r\n      }\r\n      // At this point we invoke the callback, which still can disallow the drop.\r\n      // We can't do this earlier because we want to pass the index of the placeholder.\r\n\r\n      this.dndDragover.emit(this._getEventResponse(event, dropEffect, itemType));\r\n      if (this._dragOverStopped) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // Set dropEffect to modify the cursor shown by the browser, unless we're in IE, where this\r\n      // is not supported. This must be done after preventDefault in Firefox.\r\n      event.preventDefault();\r\n      if (!ignoreDataTransfer) {\r\n         event.dataTransfer.dropEffect = dropEffect;\r\n      }\r\n\r\n      this._renderer.addClass(this._nativeElement, 'dndDragover');\r\n      event.stopPropagation();\r\n      return false;\r\n   }\r\n\r\n   @HostListener('drop', ['$event'])\r\n   onDrop(event) {\r\n      this._counter = 0;\r\n      event = event.originalEvent || event;\r\n      // Check whether the drop is allowed and determine mime type.\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      let itemType = this._getItemType(mimeType);\r\n      if (!mimeType || !this._isDropAllowed(itemType)) {\r\n         return true;\r\n      }\r\n      // The default behavior in Firefox is to interpret the dropped element as URL and\r\n      // forward to it. We want to prevent that even if our drop is aborted.\r\n      event.preventDefault();\r\n\r\n      // Unserialize the data that was serialized in dragstart.\r\n      let data;\r\n      try {\r\n         data = JSON.parse(event.dataTransfer.getData(mimeType));\r\n      } catch (e) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // Drops with invalid types from external sources might not have been filtered out yet.\r\n      if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\r\n         itemType = data.type || undefined;\r\n         data = data.item;\r\n         if (!this._isDropAllowed(itemType)) {\r\n            return this._stopDragover();\r\n         }\r\n      }\r\n\r\n      // Special handling for internal IE drops, see dragover handler.\r\n      const ignoreDataTransfer = mimeType === MSIE_MIME_TYPE;\r\n      const dropEffect = this._getDropEffect(event, ignoreDataTransfer);\r\n      if (dropEffect === 'none') {\r\n         return this._stopDragover();\r\n      }\r\n      // Invoke the callback, which can transform the transferredObject and even abort the drop.\r\n      const index = this._getPlaceholderIndex();\r\n      this.dndDrop.emit(this._getEventResponse(event, dropEffect, itemType, index, data));\r\n      if (this._dragOverStopped) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // The drop is definitely going to happen now, store the dropEffect.\r\n      this._dndService.setDropEffect(dropEffect);\r\n      if (!ignoreDataTransfer) {\r\n         event.dataTransfer.dropEffect = dropEffect;\r\n      }\r\n\r\n      if (this.dndList && this.dndList.length) {\r\n         // Creates a new array adding the object into the array position without mutate the original.\r\n         const newList = [...this.dndList.slice(0, index), data, ...this.dndList.slice(index)];\r\n         this.dndListChange.emit(newList);\r\n      }\r\n\r\n      this._dndService.setRemoveOnDrop(true);\r\n      // this._dndService.dropEndSource()\r\n\r\n      this.dndInserted.emit(this._getEventResponse(event, dropEffect, itemType, index, data));\r\n\r\n      // Clean up\r\n      this._stopDragover();\r\n      event.stopPropagation();\r\n      return false;\r\n   }\r\n\r\n   /**\r\n  * We have to remove the placeholder when the element is no longer dragged over our list. The\r\n  * problem is that the dragleave event is not only fired when the element leaves our list,\r\n  * but also when it leaves a child element. Therefore, we determine whether the mouse cursor\r\n  * is still pointing to an element inside the list or not.\r\n  */\r\n   @HostListener('dragleave', ['$event'])\r\n   onDragLeave(event) {\r\n      this._counter--;\r\n      event = event.originalEvent || event;\r\n      if (this._counter !== 0) {\r\n         // Signalize to potential parent lists that a placeholder is already shown.\r\n         event._dndPhShown = true;\r\n      } else {\r\n         this._stopDragover();\r\n      }\r\n   }\r\n\r\n   @HostListener('mouseleave', ['$event'])\r\n   onmouseout(event) {\r\n      if (this._dndService.getDraggingState()) {\r\n         this._stopDragover();\r\n      }\r\n   }\r\n\r\n   private _stopDrag() {\r\n      this._dragOverStopped = true;\r\n   }\r\n\r\n   private _stopDragover() {\r\n      this._placeholderNode.remove();\r\n      this._renderer.removeClass(this._nativeElement, 'dndDragover');\r\n      return true;\r\n   }\r\n\r\n\r\n   /**\r\n  * Create a DndListEvent instance for events response.\r\n  */\r\n   private _getEventResponse(event: DragEvent, dropEffect: string, itemType: string, index?: number, item?): DndListEvent {\r\n      return {\r\n         callback: this._dndService.getDropCallback(),\r\n         dropEffect: dropEffect,\r\n         event: event,\r\n         external: !this._dndService.getDraggingState(),\r\n         index: index !== undefined ? index : this._getPlaceholderIndex(),\r\n         item: item || undefined,\r\n         stopDragover: this._stopDrag.bind(this),\r\n         type: itemType\r\n      };\r\n   }\r\n\r\n   private _getPlaceholderIndex() {\r\n      return Array.prototype.indexOf.call(this._nativeElement.children, this._placeholderNode);\r\n   }\r\n\r\n   private _getPlaceholderElement(): Element {\r\n      let placeholder = [].slice.call(this._nativeElement.children).filter((childNode) => {\r\n         return childNode.className.indexOf('dndPlaceholder') > -1;\r\n      });\r\n      if (placeholder.length) {\r\n         return placeholder;\r\n      }\r\n      placeholder = this._renderer.createElement('li');\r\n      this._renderer.addClass(placeholder, 'dndPlaceholder');\r\n      return placeholder;\r\n   }\r\n\r\n   private _getMimeType(types) {\r\n      if (!types) {\r\n         return MSIE_MIME_TYPE; // IE 9 workaround.\r\n      }\r\n      for (let i = 0; i < types.length; i++) {\r\n         if (types[i] === MSIE_MIME_TYPE || types[i] === EDGE_MIME_TYPE ||\r\n            types[i].substr(0, MIME_TYPE.length) === MIME_TYPE) {\r\n            return types[i];\r\n         }\r\n      }\r\n      return null;\r\n   }\r\n\r\n   /**\r\n  * Determines the type of the item from the dndService, or from the mime type for items from\r\n  * external sources. Returns undefined if no item type was set and null if the item type could\r\n  * not be determined.\r\n  */\r\n   private _getItemType(mimeType) {\r\n      if (this._dndService.getDraggingState()) {\r\n         return this._dndService.getItemType() || undefined;\r\n      }\r\n      if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\r\n         return null;\r\n      }\r\n      return (mimeType && mimeType.substr(MIME_TYPE.length + 1)) || undefined;\r\n   }\r\n\r\n   private _isDropAllowed(itemType) {\r\n      if (this._listSettings.disabled) {\r\n         return false;\r\n      }\r\n      if (!this._listSettings.externalSources && !this._dndService.getDraggingState()) {\r\n         return false;\r\n      }\r\n      if (!this._listSettings.allowedTypes || itemType === null) {\r\n         return true;\r\n      }\r\n      return itemType && this._listSettings.allowedTypes.indexOf(itemType) !== -1;\r\n   }\r\n\r\n   /**\r\n  * Determines which drop effect to use for the given event. In Internet Explorer we have to\r\n  * ignore the effectAllowed field on dataTransfer, since we set a fake value in dragstart.\r\n  * In those cases we rely on dndState to filter effects. Read the design doc for more details:\r\n  * https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n  */\r\n   private _getDropEffect(event, ignoreDataTransfer) {\r\n      let effects = ALL_EFFECTS;\r\n      if (!ignoreDataTransfer) {\r\n         effects = this._filterEffects(effects, event.dataTransfer.effectAllowed);\r\n      }\r\n      if (this._dndService.getDraggingState()) {\r\n         effects = this._filterEffects(effects, this._dndService.getEffectAllowed());\r\n      }\r\n      if (this.dndEffectAllowed) {\r\n         effects = this._filterEffects(effects, this.dndEffectAllowed);\r\n      }\r\n      // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\r\n      // therefore the following modifier keys will only affect other operating systems.\r\n      if (!effects.length) {\r\n         return 'none';\r\n      } else if (event.ctrlKey && effects.indexOf('copy') !== -1) {\r\n         return 'copy';\r\n      } else if (event.altKey && effects.indexOf('link') !== -1) {\r\n         return 'link';\r\n      } else {\r\n         return effects[0];\r\n      }\r\n   }\r\n\r\n   /**\r\n  * Filters an array of drop effects using a HTML5 effectAllowed string.\r\n  */\r\n   private _filterEffects(effects, effectAllowed) {\r\n      if (effectAllowed === 'all') {\r\n         return effects;\r\n      }\r\n      return effects.filter(function (effect) {\r\n         return effectAllowed.toLowerCase().indexOf(effect) !== -1;\r\n      });\r\n   }\r\n}\r\n",
    "import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[dndNodrag]',\r\n})\r\nexport class DndNodragDirective {\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return true;\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    if (!event._dndHandle) {\r\n      // If a child element already reacted to dragstart and set a dataTransfer object, we will\r\n      // allow that. For example, this is the case for user selections inside of input elements.\r\n      if (!(event.dataTransfer.types && event.dataTransfer.types.length)) {\r\n        event.preventDefault();\r\n      }\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop propagation of dragend events, otherwise dnd-moved might be triggered and the element\r\n   * would be removed.\r\n   */\r\n  @HostListener('dragend', ['$event'])\r\n  onDragEnd(event) {\r\n    event = event.originalEvent || event;\r\n    if (!event._dndHandle) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n",
    "import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[dndHandle]',\r\n})\r\nexport class DndHandleDirective {\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return true;\r\n  }\r\n\r\n  @HostListener('dragstart dragend', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    event._dndHandle = true;\r\n  }\r\n}\r\n",
    "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DndDraggableDirective } from './directives/dnd-draggable.directive';\nimport { DndDraggableService } from './services/dnd-draggable.service';\nimport { DndListDirective } from './directives/dnd-list.directive';\nimport { DndNodragDirective } from './directives/dnd-nodrag.directive';\nimport { DndHandleDirective } from './directives/dnd-handle.directive';\n\nconst declarations = [\n  DndDraggableDirective,\n  DndListDirective,\n  DndNodragDirective,\n  DndHandleDirective\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: declarations,\n  providers: [\n    DndDraggableService\n  ],\n  exports: declarations\n})\nexport class DndListModule { }\n"
  ],
  "names": [
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "DndDraggableService",
    "this",
    "_isDragging",
    "_itemType",
    "_removeOnDrop",
    "dropEndSource",
    "Subject",
    "prototype",
    "setDraggingState",
    "state",
    "getDraggingState",
    "setItemType",
    "toLowerCase",
    "getItemType",
    "setDropCallback",
    "_dropCallback",
    "getDropCallback",
    "setDropEffect",
    "dropEffect",
    "_dropEffect",
    "getDropEffect",
    "setEffectAllowed",
    "effectAllowed",
    "_effectAllowed",
    "getEffectAllowed",
    "setRemoveOnDrop",
    "getRemoveOnDrop",
    "type",
    "Injectable",
    "MIME_TYPE",
    "EDGE_MIME_TYPE",
    "MSIE_MIME_TYPE",
    "ALL_EFFECTS",
    "DndDraggableDirective",
    "_dndService",
    "_renderer",
    "_hostElement",
    "dndType",
    "dndDragstart",
    "EventEmitter",
    "dndDragend",
    "dndSelected",
    "dndMoved",
    "dndCopied",
    "dndLinked",
    "dndCanceled",
    "_nativeElement",
    "nativeElement",
    "Object",
    "defineProperty",
    "get",
    "dndDisable",
    "onDragStart",
    "event",
    "_this",
    "originalEvent",
    "draggable",
    "mimeType",
    "dndEffectAllowed",
    "dataTransfer",
    "setData",
    "JSON",
    "stringify",
    "dndDraggable",
    "data",
    "item",
    "addClass",
    "setTimeout",
    "_dndHandle",
    "setDragImage",
    "emit",
    "dndCallback",
    "callback_1",
    "params",
    "stopPropagation",
    "onDragEnd",
    "copy",
    "link",
    "move",
    "none",
    "undefined",
    "removeClass",
    "click",
    "Directive",
    "args",
    "selector",
    "Renderer2",
    "ElementRef",
    "Input",
    "Output",
    "HostBinding",
    "HostListener",
    "DndListDirective",
    "_el",
    "dndListChange",
    "dndDragover",
    "dndDrop",
    "dndInserted",
    "_listSettings",
    "_dragOverStopped",
    "_counter",
    "ngOnInit",
    "placeholder",
    "_getPlaceholderElement",
    "remove",
    "_placeholderNode",
    "_listNode",
    "onDragEnter",
    "allowedTypes",
    "Array",
    "isArray",
    "dndAllowedTypes",
    "join",
    "split",
    "disabled",
    "externalSources",
    "dndExternalSources",
    "horizontal",
    "dndHorizontalList",
    "_getMimeType",
    "types",
    "_isDropAllowed",
    "_getItemType",
    "preventDefault",
    "onDragOver",
    "itemType",
    "parentNode",
    "appendChild",
    "target",
    "listItemNode",
    "rect",
    "getBoundingClientRect",
    "isFirstHalf",
    "clientX",
    "left",
    "width",
    "clientY",
    "top",
    "height",
    "insertBefore",
    "nextSibling",
    "ignoreDataTransfer",
    "_getDropEffect",
    "_stopDragover",
    "_getEventResponse",
    "onDrop",
    "parse",
    "getData",
    "index",
    "_getPlaceholderIndex",
    "dndList",
    "length",
    "newList",
    "arguments",
    "concat",
    "__spread",
    "slice",
    "onDragLeave",
    "_dndPhShown",
    "onmouseout",
    "_stopDrag",
    "callback",
    "external",
    "stopDragover",
    "bind",
    "indexOf",
    "children",
    "filter",
    "childNode",
    "className",
    "createElement",
    "substr",
    "effects",
    "_filterEffects",
    "ctrlKey",
    "altKey",
    "effect",
    "pureComponent",
    "DndNodragDirective",
    "DndHandleDirective",
    "declarations",
    "DndListModule",
    "NgModule",
    "imports",
    "CommonModule",
    "providers",
    "exports"
  ],
  "mappings": "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"
}
