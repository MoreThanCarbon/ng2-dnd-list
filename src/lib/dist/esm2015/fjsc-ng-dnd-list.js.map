{
  "version": 3,
  "file": "fjsc-ng-dnd-list.js",
  "sources": [
    "ng://@fjsc/ng-dnd-list/out/dnd-list/dnd-list.module.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-handle.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-nodrag.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-list.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/directives/dnd-draggable.directive.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/dnd-constants.ts",
    "ng://@fjsc/ng-dnd-list/out/dnd-list/services/dnd-draggable.service.ts"
  ],
  "sourcesContent": [
    "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DndDraggableDirective } from './directives/dnd-draggable.directive';\nimport { DndDraggableService } from './services/dnd-draggable.service';\nimport { DndListDirective } from './directives/dnd-list.directive';\nimport { DndNodragDirective } from './directives/dnd-nodrag.directive';\nimport { DndHandleDirective } from './directives/dnd-handle.directive';\n\nconst declarations = [\n  DndDraggableDirective,\n  DndListDirective,\n  DndNodragDirective,\n  DndHandleDirective\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: declarations,\n  providers: [\n    DndDraggableService\n  ],\n  exports: declarations\n})\nexport class DndListModule { }\n",
    "import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[dndHandle]',\r\n})\r\nexport class DndHandleDirective {\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return true;\r\n  }\r\n\r\n  @HostListener('dragstart dragend', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    event._dndHandle = true;\r\n  }\r\n}\r\n",
    "import { Directive, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[dndNodrag]',\r\n})\r\nexport class DndNodragDirective {\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return true;\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    if (!event._dndHandle) {\r\n      // If a child element already reacted to dragstart and set a dataTransfer object, we will\r\n      // allow that. For example, this is the case for user selections inside of input elements.\r\n      if (!(event.dataTransfer.types && event.dataTransfer.types.length)) {\r\n        event.preventDefault();\r\n      }\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop propagation of dragend events, otherwise dnd-moved might be triggered and the element\r\n   * would be removed.\r\n   */\r\n  @HostListener('dragend', ['$event'])\r\n  onDragEnd(event) {\r\n    event = event.originalEvent || event;\r\n    if (!event._dndHandle) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n",
    "import {\r\n   Directive,\r\n   HostBinding,\r\n   OnChanges,\r\n   Input,\r\n   HostListener,\r\n   ElementRef,\r\n   Renderer2,\r\n   OnInit,\r\n   Output,\r\n   EventEmitter\r\n} from '@angular/core';\r\nimport { DndDraggableService } from '../services/dnd-draggable.service';\r\nimport { MSIE_MIME_TYPE, EDGE_MIME_TYPE, MIME_TYPE, ALL_EFFECTS } from '../dnd-constants';\r\nimport { DndListEvent } from '../models/events';\r\n\r\n@Directive({\r\n   selector: '[dndList]',\r\n})\r\nexport class DndListDirective implements OnInit {\r\n   @Input() dndDisable = false;\r\n   @Input() dndAllowedTypes: String[];\r\n   @Input() dndExternalSources: any;\r\n   @Input() dndHorizontalList: any;\r\n   @Input() dndEffectAllowed: string;\r\n   @Input() pureComponent: boolean;\r\n   @Input() dndList: any;\r\n\r\n   @Output() dndListChange = new EventEmitter<any>();\r\n\r\n   @Output() dndDragover = new EventEmitter<DndListEvent>();\r\n   @Output() dndDrop = new EventEmitter<DndListEvent>();\r\n   @Output() dndInserted = new EventEmitter<DndListEvent>();\r\n\r\n   private _nativeElement: Element;\r\n   private _placeholderNode: Element;\r\n\r\n   private _listSettings: any = {};\r\n   private _listNode: any;\r\n   private _dragOverStopped = false;\r\n\r\n   private _counter = 0;\r\n\r\n   constructor(private _el: ElementRef, private _renderer: Renderer2, private _dndService: DndDraggableService) {\r\n      this._nativeElement = this._el.nativeElement;\r\n   }\r\n\r\n   ngOnInit(): void {\r\n      const placeholder = this._getPlaceholderElement();\r\n      placeholder.remove();\r\n      this._placeholderNode = placeholder;\r\n      this._listNode = this._nativeElement;\r\n   }\r\n\r\n   @HostListener('dragenter', ['$event'])\r\n   onDragEnter(event) {\r\n      this._counter++;\r\n      this._dragOverStopped = false;\r\n      event = event.originalEvent || event;\r\n      this._listSettings = {\r\n         allowedTypes: Array.isArray(this.dndAllowedTypes) && this.dndAllowedTypes.join('|').toLowerCase().split('|'),\r\n         disabled: this.dndDisable,\r\n         externalSources: this.dndExternalSources,\r\n         horizontal: this.dndHorizontalList\r\n      };\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      if (!mimeType || !this._isDropAllowed(this._getItemType(mimeType))) {\r\n         return true;\r\n      }\r\n      event.preventDefault();\r\n   }\r\n\r\n   @HostListener('dragover', ['$event'])\r\n   onDragOver(event) {\r\n      event = event.originalEvent || event;\r\n      // Check whether the drop is allowed and determine mime type.\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      const itemType = this._getItemType(mimeType);\r\n      if (!mimeType || !this._isDropAllowed(itemType)) {\r\n         return true;\r\n      }\r\n      // Make sure the placeholder is shown, which is especially important if the list is empty.\r\n      if (this._placeholderNode.parentNode !== this._listNode) {\r\n         this._renderer.appendChild(this._nativeElement, this._placeholderNode);\r\n      }\r\n\r\n      if (event.target !== this._listNode) {\r\n         // Try to find the node direct directly below the list node.\r\n         let listItemNode = event.target;\r\n         while (listItemNode.parentNode !== this._listNode && listItemNode.parentNode) {\r\n            listItemNode = listItemNode.parentNode;\r\n         }\r\n\r\n         if (listItemNode.parentNode === this._listNode && listItemNode !== this._placeholderNode) {\r\n            // If the mouse pointer is in the upper half of the list item element,\r\n            // we position the placeholder before the list item, otherwise after it.\r\n            const rect = listItemNode.getBoundingClientRect();\r\n            let isFirstHalf;\r\n            if (this._listSettings.horizontal) {\r\n               isFirstHalf = event.clientX < rect.left + rect.width / 2;\r\n            } else {\r\n               isFirstHalf = event.clientY < rect.top + rect.height / 2;\r\n            }\r\n            this._listNode.insertBefore(this._placeholderNode,\r\n               isFirstHalf ? listItemNode : listItemNode.nextSibling);\r\n         }\r\n      }\r\n\r\n      // In IE we set a fake effectAllowed in dragstart to get the correct cursor, we therefore\r\n      // ignore the effectAllowed passed in dataTransfer. We must also not access dataTransfer for\r\n      // drops from external sources, as that throws an exception.\r\n      const ignoreDataTransfer = mimeType === MSIE_MIME_TYPE;\r\n      const dropEffect = this._getDropEffect(event, ignoreDataTransfer);\r\n\r\n      if (dropEffect === 'none') {\r\n         return this._stopDragover();\r\n      }\r\n      // At this point we invoke the callback, which still can disallow the drop.\r\n      // We can't do this earlier because we want to pass the index of the placeholder.\r\n\r\n      this.dndDragover.emit(this._getEventResponse(event, dropEffect, itemType));\r\n      if (this._dragOverStopped) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // Set dropEffect to modify the cursor shown by the browser, unless we're in IE, where this\r\n      // is not supported. This must be done after preventDefault in Firefox.\r\n      event.preventDefault();\r\n      if (!ignoreDataTransfer) {\r\n         event.dataTransfer.dropEffect = dropEffect;\r\n      }\r\n\r\n      this._renderer.addClass(this._nativeElement, 'dndDragover');\r\n      event.stopPropagation();\r\n      return false;\r\n   }\r\n\r\n   @HostListener('drop', ['$event'])\r\n   onDrop(event) {\r\n      this._counter = 0;\r\n      event = event.originalEvent || event;\r\n      // Check whether the drop is allowed and determine mime type.\r\n      const mimeType = this._getMimeType(event.dataTransfer.types);\r\n      let itemType = this._getItemType(mimeType);\r\n      if (!mimeType || !this._isDropAllowed(itemType)) {\r\n         return true;\r\n      }\r\n      // The default behavior in Firefox is to interpret the dropped element as URL and\r\n      // forward to it. We want to prevent that even if our drop is aborted.\r\n      event.preventDefault();\r\n\r\n      // Unserialize the data that was serialized in dragstart.\r\n      let data;\r\n      try {\r\n         data = JSON.parse(event.dataTransfer.getData(mimeType));\r\n      } catch (e) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // Drops with invalid types from external sources might not have been filtered out yet.\r\n      if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\r\n         itemType = data.type || undefined;\r\n         data = data.item;\r\n         if (!this._isDropAllowed(itemType)) {\r\n            return this._stopDragover();\r\n         }\r\n      }\r\n\r\n      // Special handling for internal IE drops, see dragover handler.\r\n      const ignoreDataTransfer = mimeType === MSIE_MIME_TYPE;\r\n      const dropEffect = this._getDropEffect(event, ignoreDataTransfer);\r\n      if (dropEffect === 'none') {\r\n         return this._stopDragover();\r\n      }\r\n      // Invoke the callback, which can transform the transferredObject and even abort the drop.\r\n      const index = this._getPlaceholderIndex();\r\n      this.dndDrop.emit(this._getEventResponse(event, dropEffect, itemType, index, data));\r\n      if (this._dragOverStopped) {\r\n         return this._stopDragover();\r\n      }\r\n\r\n      // The drop is definitely going to happen now, store the dropEffect.\r\n      this._dndService.setDropEffect(dropEffect);\r\n      if (!ignoreDataTransfer) {\r\n         event.dataTransfer.dropEffect = dropEffect;\r\n      }\r\n\r\n      if (this.dndList && this.dndList.length) {\r\n         // Creates a new array adding the object into the array position without mutate the original.\r\n         const newList = [...this.dndList.slice(0, index), data, ...this.dndList.slice(index)];\r\n         this.dndListChange.emit(newList);\r\n      }\r\n\r\n      this._dndService.setRemoveOnDrop(true);\r\n      // this._dndService.dropEndSource()\r\n\r\n      this.dndInserted.emit(this._getEventResponse(event, dropEffect, itemType, index, data));\r\n\r\n      // Clean up\r\n      this._stopDragover();\r\n      event.stopPropagation();\r\n      return false;\r\n   }\r\n\r\n   /**\r\n  * We have to remove the placeholder when the element is no longer dragged over our list. The\r\n  * problem is that the dragleave event is not only fired when the element leaves our list,\r\n  * but also when it leaves a child element. Therefore, we determine whether the mouse cursor\r\n  * is still pointing to an element inside the list or not.\r\n  */\r\n   @HostListener('dragleave', ['$event'])\r\n   onDragLeave(event) {\r\n      this._counter--;\r\n      event = event.originalEvent || event;\r\n      if (this._counter !== 0) {\r\n         // Signalize to potential parent lists that a placeholder is already shown.\r\n         event._dndPhShown = true;\r\n      } else {\r\n         this._stopDragover();\r\n      }\r\n   }\r\n\r\n   @HostListener('mouseleave', ['$event'])\r\n   onmouseout(event) {\r\n      if (this._dndService.getDraggingState()) {\r\n         this._stopDragover();\r\n      }\r\n   }\r\n\r\n   private _stopDrag() {\r\n      this._dragOverStopped = true;\r\n   }\r\n\r\n   private _stopDragover() {\r\n      this._placeholderNode.remove();\r\n      this._renderer.removeClass(this._nativeElement, 'dndDragover');\r\n      return true;\r\n   }\r\n\r\n\r\n   /**\r\n  * Create a DndListEvent instance for events response.\r\n  */\r\n   private _getEventResponse(event: DragEvent, dropEffect: string, itemType: string, index?: number, item?): DndListEvent {\r\n      return {\r\n         callback: this._dndService.getDropCallback(),\r\n         dropEffect: dropEffect,\r\n         event: event,\r\n         external: !this._dndService.getDraggingState(),\r\n         index: index !== undefined ? index : this._getPlaceholderIndex(),\r\n         item: item || undefined,\r\n         stopDragover: this._stopDrag.bind(this),\r\n         type: itemType\r\n      };\r\n   }\r\n\r\n   private _getPlaceholderIndex() {\r\n      return Array.prototype.indexOf.call(this._nativeElement.children, this._placeholderNode);\r\n   }\r\n\r\n   private _getPlaceholderElement(): Element {\r\n      let placeholder = [].slice.call(this._nativeElement.children).filter((childNode) => {\r\n         return childNode.className.indexOf('dndPlaceholder') > -1;\r\n      });\r\n      if (placeholder.length) {\r\n         return placeholder;\r\n      }\r\n      placeholder = this._renderer.createElement('li');\r\n      this._renderer.addClass(placeholder, 'dndPlaceholder');\r\n      return placeholder;\r\n   }\r\n\r\n   private _getMimeType(types) {\r\n      if (!types) {\r\n         return MSIE_MIME_TYPE; // IE 9 workaround.\r\n      }\r\n      for (let i = 0; i < types.length; i++) {\r\n         if (types[i] === MSIE_MIME_TYPE || types[i] === EDGE_MIME_TYPE ||\r\n            types[i].substr(0, MIME_TYPE.length) === MIME_TYPE) {\r\n            return types[i];\r\n         }\r\n      }\r\n      return null;\r\n   }\r\n\r\n   /**\r\n  * Determines the type of the item from the dndService, or from the mime type for items from\r\n  * external sources. Returns undefined if no item type was set and null if the item type could\r\n  * not be determined.\r\n  */\r\n   private _getItemType(mimeType) {\r\n      if (this._dndService.getDraggingState()) {\r\n         return this._dndService.getItemType() || undefined;\r\n      }\r\n      if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\r\n         return null;\r\n      }\r\n      return (mimeType && mimeType.substr(MIME_TYPE.length + 1)) || undefined;\r\n   }\r\n\r\n   private _isDropAllowed(itemType) {\r\n      if (this._listSettings.disabled) {\r\n         return false;\r\n      }\r\n      if (!this._listSettings.externalSources && !this._dndService.getDraggingState()) {\r\n         return false;\r\n      }\r\n      if (!this._listSettings.allowedTypes || itemType === null) {\r\n         return true;\r\n      }\r\n      return itemType && this._listSettings.allowedTypes.indexOf(itemType) !== -1;\r\n   }\r\n\r\n   /**\r\n  * Determines which drop effect to use for the given event. In Internet Explorer we have to\r\n  * ignore the effectAllowed field on dataTransfer, since we set a fake value in dragstart.\r\n  * In those cases we rely on dndState to filter effects. Read the design doc for more details:\r\n  * https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n  */\r\n   private _getDropEffect(event, ignoreDataTransfer) {\r\n      let effects = ALL_EFFECTS;\r\n      if (!ignoreDataTransfer) {\r\n         effects = this._filterEffects(effects, event.dataTransfer.effectAllowed);\r\n      }\r\n      if (this._dndService.getDraggingState()) {\r\n         effects = this._filterEffects(effects, this._dndService.getEffectAllowed());\r\n      }\r\n      if (this.dndEffectAllowed) {\r\n         effects = this._filterEffects(effects, this.dndEffectAllowed);\r\n      }\r\n      // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\r\n      // therefore the following modifier keys will only affect other operating systems.\r\n      if (!effects.length) {\r\n         return 'none';\r\n      } else if (event.ctrlKey && effects.indexOf('copy') !== -1) {\r\n         return 'copy';\r\n      } else if (event.altKey && effects.indexOf('link') !== -1) {\r\n         return 'link';\r\n      } else {\r\n         return effects[0];\r\n      }\r\n   }\r\n\r\n   /**\r\n  * Filters an array of drop effects using a HTML5 effectAllowed string.\r\n  */\r\n   private _filterEffects(effects, effectAllowed) {\r\n      if (effectAllowed === 'all') {\r\n         return effects;\r\n      }\r\n      return effects.filter(function (effect) {\r\n         return effectAllowed.toLowerCase().indexOf(effect) !== -1;\r\n      });\r\n   }\r\n}\r\n",
    "import {\r\n  Directive, HostBinding, OnChanges, SimpleChanges, Input,\r\n  HostListener, ElementRef, Renderer2, Output, EventEmitter\r\n} from '@angular/core';\r\nimport { DndDraggableService } from '../services/dnd-draggable.service';\r\nimport { MIME_TYPE, EDGE_MIME_TYPE, MSIE_MIME_TYPE, ALL_EFFECTS } from '../dnd-constants';\r\nimport { DndDragendEvent } from '../models/events';\r\n\r\n@Directive({\r\n  selector: '[dndDraggable]',\r\n})\r\nexport class DndDraggableDirective {\r\n\r\n  @Input() dndDraggable: any;\r\n  @Input() dndDisable: boolean;\r\n  @Input() dndType = '';\r\n  @Input() dndCallback: Function;\r\n  @Input() dndEffectAllowed: string;\r\n\r\n  @Output() dndDragstart = new EventEmitter<DragEvent>();\r\n  @Output() dndDragend = new EventEmitter<DndDragendEvent>();\r\n  @Output() dndSelected = new EventEmitter<Event>();\r\n\r\n  @Output() dndMoved = new EventEmitter<DragEvent>();\r\n  @Output() dndCopied = new EventEmitter<DragEvent>();\r\n  @Output() dndLinked = new EventEmitter<DragEvent>();\r\n  @Output() dndCanceled = new EventEmitter<DragEvent>();\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return !this.dndDisable;\r\n  }\r\n\r\n  private _nativeElement: Element;\r\n\r\n  constructor(private _dndService: DndDraggableService, private _renderer: Renderer2, _hostElement: ElementRef) {\r\n    this._nativeElement = _hostElement.nativeElement;\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onDragStart(event) {\r\n    event = event.originalEvent || event;\r\n    if (!this.draggable) {\r\n      return true;\r\n    }\r\n    this._dndService.setDraggingState(true);\r\n    this._dndService.setItemType(this.dndType);\r\n    const mimeType = MIME_TYPE + (this._dndService.getItemType() ? ('-' + this._dndService.getItemType()) : '');\r\n    // Set the allowed drop effects. See below for special IE handling.\r\n    this._dndService.setDropEffect('none');\r\n    this._dndService.setEffectAllowed(this.dndEffectAllowed || ALL_EFFECTS[0]);\r\n\r\n    event.dataTransfer.effectAllowed = this._dndService.getEffectAllowed(); // TODO: set allowed effects\r\n    try {\r\n      event.dataTransfer.setData(mimeType, JSON.stringify(this.dndDraggable));\r\n    } catch (e) {\r\n      const data = {\r\n        item: this.dndDraggable,\r\n        type: this._dndService.getItemType()\r\n      };\r\n\r\n      try {\r\n        // Setting a custom MIME type did not work, we are probably in IE or Edge.\r\n        event.dataTransfer.setData(EDGE_MIME_TYPE, JSON.stringify(data));\r\n\r\n      } catch (e) {\r\n        // We are in Internet Explorer and can only use the Text MIME type. Also note that IE\r\n        // does not allow changing the cursor in the dragover event, therefore we have to choose\r\n        // the one we want to display now by setting effectAllowed.\r\n        event.dataTransfer.effectAllowed = 'move';\r\n        event.dataTransfer.setData(MSIE_MIME_TYPE, JSON.stringify(data));\r\n      }\r\n    }\r\n    this._renderer.addClass(this._nativeElement, 'dndDragging');\r\n    setTimeout(() => this._renderer.addClass(this._nativeElement, 'dndDraggingSource'), 0);\r\n    // Try setting a proper drag image if triggered on a dnd-handle (won't work in IE).\r\n    if (event._dndHandle && event.dataTransfer.setDragImage) {\r\n      event.dataTransfer.setDragImage(this._nativeElement, 0, 0);\r\n    }\r\n    // Emit dragstart event and prepare extra callback for dropzone.\r\n    this.dndDragstart.emit(event);\r\n\r\n    if (this.dndCallback) {\r\n      const callback = this.dndCallback;\r\n      this._dndService.setDropCallback(function (params) {\r\n        return callback(params);\r\n      });\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  onDragEnd(event: DragEvent) {\r\n    const dropEffect = this._dndService.getDropEffect();\r\n    const cb = { copy: 'dndCopied', link: 'dndLinked', move: 'dndMoved', none: 'dndCanceled' };\r\n    this[cb[dropEffect]].emit(event);\r\n    this.dndDragend.emit({\r\n      event: event,\r\n      dropEffect: dropEffect\r\n    });\r\n\r\n    // Clean up\r\n    this._dndService.setDraggingState(false);\r\n    this._dndService.setDropCallback(undefined);\r\n    this._dndService.setRemoveOnDrop(false);\r\n    this._renderer.removeClass(this._nativeElement, 'dndDragging');\r\n    this._renderer.removeClass(this._nativeElement, 'dndDraggingSource');\r\n    event.stopPropagation();\r\n\r\n    // In IE9 it is possible that the timeout from dragstart triggers after the dragend handler.\r\n    setTimeout(() => this._renderer.removeClass(this._nativeElement, 'dndDraggingSource'), 0);\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  click(event: MouseEvent) {\r\n    this.dndSelected.emit(event);\r\n    // Prevent triggering dndSelected in parent elements.\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n",
    "export const MIME_TYPE = 'application/x-dnd';\r\nexport const EDGE_MIME_TYPE = 'application/json';\r\nexport const MSIE_MIME_TYPE = 'Text';\r\nexport const ALL_EFFECTS = ['move', 'copy', 'link'];\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class DndDraggableService {\r\n\r\n  private _isDragging = false;\r\n  private _itemType = '';\r\n  private _dropCallback: Function;\r\n  private _dropEffect: string;\r\n  private _effectAllowed: string;\r\n  private _removeOnDrop = false;\r\n\r\n  public dropEndSource = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  setDraggingState(state: boolean) {\r\n    this._isDragging = state;\r\n  }\r\n\r\n  getDraggingState(): boolean {\r\n    return this._isDragging;\r\n  }\r\n\r\n  setItemType(value: string): void {\r\n    this._itemType = value.toLowerCase();\r\n  }\r\n\r\n  getItemType(): string {\r\n    return this._itemType;\r\n  }\r\n\r\n  setDropCallback(value: Function): void {\r\n    this._dropCallback = value;\r\n  }\r\n\r\n  getDropCallback(): Function {\r\n    return this._dropCallback;\r\n  }\r\n\r\n  setDropEffect(dropEffect: string): void {\r\n    this._dropEffect = dropEffect;\r\n  }\r\n\r\n  getDropEffect(): string {\r\n    return this._dropEffect;\r\n  }\r\n\r\n  setEffectAllowed(effectAllowed: string): void {\r\n    this._effectAllowed = effectAllowed;\r\n  }\r\n\r\n  getEffectAllowed(): string {\r\n    return this._effectAllowed;\r\n  }\r\n\r\n  setRemoveOnDrop(value: boolean) {\r\n    this._removeOnDrop = value;\r\n  }\r\n\r\n  getRemoveOnDrop() {\r\n    return this._removeOnDrop;\r\n  }\r\n\r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
